x*2
}
add_eidulfitr_regressor<-function(data){
library(prophet)
holidays<-prophet::generated_holidays
holidays<-holidays %>% filter(country=="ID" & holiday=="Eid al-Fitr")
holidays$bulan<-as.integer(format(as.Date(holidays$ds), "%m"))
holidays$tahun<-as.integer(format(as.Date(holidays$ds), "%Y"))
holidays<-holidays %>% select(-year)
names(holidays)<-c("ds","holiday","country","Bulan","Tahun")
add_1994<-data.frame("1994-03-14","Eid al-Fitr","ID",3,1994)
names(add_1994)<-c("ds","holiday","country","Bulan","Tahun")
holidays<-rbind(holidays, add_1994)
data<-data %>% left_join(holidays,copy = TRUE)
data<-data %>% select(-c(holiday, country))
data<-data %>% mutate(ds=ifelse(is.na(ds),yes = 0,no=1))
#colnames(data)[colnames(data) == 'ds'] <- 'eid'
#data<-as_tibble(data) %>% rename(ds=eid)
#%>%  %>%
}
read_data<-function(kota,pecahan){
library(gsheet)
library(tidyverse)
url<-"https://drive.google.com/file/d/1WES1QCc0OHqZt9kiFkwRp2qx2RGxOA97/view?usp=sharing"
dataset<-gsheet2tbl(url) %>% filter(Kota == kota) %>% select(Kota,Tahun,Bulan,pecahan)
index<-dataset[,4]<=0.0000
dataset[,4][index]<-NA
dataset<-dataset %>% na.trim()
dataset[,4]<-na.approx(dataset[,4])
dataset<-as.data.frame(dataset)
dataset<-add_eidulfitr_regressor(dataset)
dataset<-dataset %>% select(-Kota)
#dataset[,1]<-as.factor(dataset[,1])
#dataset[,2]<-as.factor(dataset[,2])
#dataset[,3]<-as.factor(dataset[,3])
#dataset[,4]<-as.numeric(dataset[,4])
#dataset[,5]<-as.integer(dataset[,5])
#holidays<-eidulfitr_regressor(country = "ID",holiday = "Eid al-Fitr")
#data_outflow<-left_join(data_outflow,holidays,copy=TRUE)
#data_outflow<-data_outflow %>% select(tahun:ds)
#data_outflow<-data_outflow %>% mutate(ds=ifelse(is.na(ds),yes = 0,no=1))
}
init_run<-function(){
library(xts)
library(forecast)
library(nnfor)
library(TSrepr)
library(TSstudio)
library(tidyverse)
library(SmartEDA)
library(dlookr)
library(tseries)
library(urca)
library(RSNNS)
set.seed(72)
}
split_data<-function(data,precentage_test){
library(TSstudio)
length_data<-nrow(data)
n_test<-round(length_data*(precentage_test/100))
n_train<-length_data-n_test
split<-ts_split(data,sample.out = n_test)
return(split)
}
####################grid search################
#testFun <- function(x) {
#  mlp.model<-mlp(train_test_data$train,hd=c(x[1],x[2]),xreg = cbind(EIDULFITR),reps = 1,lags = x[3])
#  mlp.model$MSE
#}
#res <- gridSearch(fun=testFun, levels = list(1:10,1:10,1:24))
#res$minfun
#res$minlevels
###############################################
flow_data<-read_data("Jakarta","K100000")
na.trim()
library(xts)
library(forecast)
library(nnfor)
library(TSrepr)
library(TSstudio)
library(tidyverse)
library(SmartEDA)
library(dlookr)
library(tseries)
library(urca)
library(RSNNS)
set.seed(72)
flow_data<-read_data("Jakarta","K100000")
flow_data_xts <- ts(flow_data[,3],start=c(flow_data[1,1], flow_data[1,2]), end=c(2019, 6),
frequency=12)
flow_data_xts
ts_plot(flow_data_xts)
ts_plot(flow_data_xts,title = Outflow Jakarta K100000)
ts_plot(flow_data_xts,title = "Outflow Jakarta K100000")
version()
abline(v=15, col="blue")
ts_plot(flow_data_xts,title = "Outflow Jakarta K100000")
abline(v=15, col="blue")
subset
p <- ggplot(flow_data_xts)
p
library(zoo)
autoplot(as.zoo(flow_data_xts), geom = "point")
autoplot(as.zoo(flow_data_xts), geom = "line")
ts_plot(flow_data_xts,title = "Outflow Jakarta K100000",Ytitle = "lelele")
autoplot(as.zoo(flow_data_xts), geom = "line",ylab="value")
autoplot(as.zoo(flow_data_xts))
fortify(flow_data_xts)
last_plot()
ggplot(aes(x = Index, y = Value), data = fortify(flow_data_xts, melt = TRUE)) +
geom_line() + xlab("Index") + ylab("x")
fortify(flow_data_xts, melt = TRUE)
ggplot(aes(x = x, y = y), data = fortify(flow_data_xts, melt = TRUE)) +
geom_line() + xlab("Index") + ylab("x")
ggplot(aes(x = x, y = y), data = fortify(flow_data_xts, melt = TRUE)) +
geom_line() + xlab("Tahun") + ylab("Outflow")
ggplot(aes(x = x, y = y), data = fortify(flow_data_xts, melt = TRUE)) +
geom_line() + xlab("Tahun") + ylab("Outflow Jakarta K100000")
ggplot(aes(x = x, y = y), data = fortify(flow_data_xts, melt = TRUE)) +
geom_line() + xlab("Tahun") + ylab("Nilai")+title("Outflow Jakarta K100000")
library(ggplot2)
library(dplyr)
# Dummy data
data <- data.frame(
day = as.Date("2017-06-14") - 0:364,
value = runif(365) + seq(-140, 224)^2 / 10000
)
# Most basic bubble plot
p <- ggplot(data, aes(x=day, y=value)) +
geom_line() +
xlab("")
p
View(data)
ggplot(aes(x = x, y = y), data = fortify(flow_data_xts, melt = TRUE)) +
geom_line() + xlab("Tahun") + ylab("Nilai")+title("Outflow Jakarta K100000")
ggplot2(aes(x = x, y = y), data = fortify(flow_data_xts, melt = TRUE)) +
geom_line() + xlab("Tahun") + ylab("Nilai")+title("Outflow Jakarta K100000")
ggplot(aes(x = x, y = y), data = fortify(flow_data_xts, melt = TRUE)) +
geom_line() + xlab("Tahun") + ylab("Nilai")+title("Outflow Jakarta K100000")
ggplot(aes(x = x, y = y), data = fortify(flow_data_xts, melt = TRUE)) +
geom_line() + xlab("Tahun") + ylab("Nilai")+title("Outflow Jakarta K100000")
ggplot(aes(x = x, y = y), data = fortify(flow_data_xts, melt = TRUE)) +
geom_line() + xlab("Tahun") + ylab("Nilai") + title("Outflow Jakarta K100000")
ggplot(aes(x = x, y = y), data = fortify(flow_data_xts, melt = TRUE)) +
geom_line() + xlab("Tahun") + ylab("Nilai")
p<-ggplot(aes(x = x, y = y), data = fortify(flow_data_xts, melt = TRUE)) +
geom_line() + xlab("Tahun") + ylab("Nilai")
p<-p+ + title("Outflow Jakarta K100000")
p<-p + title("Outflow Jakarta K100000")
ggplot(aes(x = x, y = y), data = fortify(flow_data_xts, melt = TRUE)) +
geom_line() + xlab("Tahun") + ylab("Nilai")
ggplot(aes(x = x, y = y), data = fortify(flow_data_xts, melt = TRUE)) +
geom_line() + labs(x="Tahun",y="Nilai",title="Ngene")
as.xts(flow_data_xts)
as.xts(flow_data_xts) %>% fortify()
as.xts(flow_data_xts) %>% fortify(melt=TRUE)
as.xts(flow_data_xts)
as.xts(flow_data_xts) %>% autoplot()
as.xts(flow_data_xts) %>% autoplot() %>% labs(x="Tahun",y="Nilai",title="Ngene")
as.xts(flow_data_xts) %>% autoplot() + labs(x="Tahun",y="Nilai",title="Ngene")
as.xts(flow_data_xts) %>% autoplot() + labs(x="Tahun",y="Nilai",title="Ngene")+ geom_vline(xintercept = 5)
as.xts(flow_data_xts) %>% autoplot() + labs(x="Tahun",y="Nilai",title="Ngene")
fortify(flow_data_xts, melt = TRUE)
as.xts(flow_data_xts) %>% autoplot() + labs(x="Tahun",y="Nilai",title="Ngene")++ geom_vline(xintercept = 2000)
as.xts(flow_data_xts) %>% autoplot() + labs(x="Tahun",y="Nilai",title="Ngene")+ geom_vline(xintercept = 2000)
as.xts(flow_data_xts) %>% autoplot() + labs(x="Tahun",y="Nilai",title="Ngene")+ geom_vline(xintercept = seq(from=2000, to=2019, by=12))
as.xts(flow_data_xts) %>% autoplot() + labs(x="Tahun",y="Nilai",title="Ngene")+ geom_vline(xintercept = seq(from=2000, to=2019, by=1))
as.xts(flow_data_xts) %>% autoplot() + labs(x="Tahun",y="Nilai",title="Ngene")+
geom_vline(xintercept = seq(from=2000, to=2019, by=1))
ggplot(aes(x = x, y = y), data = fortify(flow_data_xts, melt = TRUE)) +
geom_line() + labs(x="Tahun",y="Nilai",title="Ngene")
as.xts(flow_data_xts) %>% autoplot() + labs(x="Tahun",y="Nilai",title="Ngene")+
geom_vline(xintercept = seq(from=2000, to=2019, by=1))
as.xts(flow_data_xts) %>% autoplot() + labs(x="Tahun",y="Nilai",title="Outflow Jakarta K100000")+
geom_vline(xintercept = seq(from=2000, to=2019, by=1))
as.xts(flow_data_xts) %>% autoplot() + labs(x="Tahun",y="Nilai",title="Outflow Jakarta K100000")+
geom_vline(xintercept = seq(from=2000, to=2019, by=1),color="grey")
ggplot(aes(x = x, y = y), data = fortify(flow_data_xts, melt = TRUE)) +
geom_line() + labs(x="Tahun",y="Nilai",title="Ngene") +
scale_x_continuous(breaks = seq(10, 60, by = 10))
seq(10, 60, by = 10)
as.xts(flow_data_xts) %>% autoplot() + labs(x="Tahun",y="Nilai",title="Outflow Jakarta K100000")+
geom_vline(xintercept = seq(from=2000, to=2019, by=1),color="grey")+
scale_x_continuous(breaks = seq(2000, 60, by = 10))
seq(2000, 60, 10)
seq(2000, 2020, 10)
as.xts(flow_data_xts) %>% autoplot() + labs(x="Tahun",y="Nilai",title="Outflow Jakarta K100000")+
geom_vline(xintercept = seq(from=2000, to=2019, by=1),color="grey")+
scale_x_continuous(breaks = seq(2000, 2020, 10))
as.xts(flow_data_xts) %>% autoplot() + labs(x="Tahun",y="Nilai",title="Outflow Jakarta K100000")+
geom_vline(xintercept = seq(from=2000, to=2019, by=1),color="grey")+
scale_x_continuous(breaks = seq(2000, 2020, 0.5))
as.xts(flow_data_xts) %>% autoplot() + labs(x="Tahun",y="Nilai",title="Outflow Jakarta K100000")+
geom_vline(xintercept = seq(from=2000, to=2019, by=1),color="grey")+
scale_x_continuous(breaks = seq(2000, 2020, 1))
as.xts(flow_data_xts) %>% autoplot() + labs(x="Tahun",y="Nilai",title="Outflow Jakarta K100000")+
geom_vline(xintercept = seq(from=2000, to=2019, by=1),color="grey")+
scale_x_continuous(breaks = seq(2000, 2020, 1))
ts_decompose(flow_data_xts)
x =
plot(cumsum(rnorm(1000)), type='l')
x =
ts((cumsum(rnorm(1000)), type='l'))
x =
ts(cumsum(rnorm(1000)), type='l')
x =
ts(cumsum(rnorm(1000)))
x =
ts(cumsum(rnorm(1000)))
x = ts(cumsum(rnorm(1000)))
x
ts_decompose(x)
x = ts(cumsum(rnorm(1000)),start = c(1990,12),frequency = 12)
ts_decompose(x)
ts_decompose(flow_data_xts)
as.xts(flow_data_xts) %>% autoplot() + labs(x="Tahun",y="Nilai",title="Outflow Jakarta K100000")+
geom_vline(xintercept = seq(from=2000, to=2019, by=1),color="grey")+
scale_x_continuous(breaks = seq(2000, 2020, 1))
as.xts(flow_data_xts) %>% autoplot() + labs(x="Tahun",y="Nilai",title="Outflow Jakarta K100000")+
geom_vline(xintercept = seq(from=2000, to=2019, by=1),color="grey")+
scale_x_continuous(breaks = seq(2000, 2020, 0.5))
as.xts(flow_data_xts) %>% autoplot() + labs(x="Tahun",y="Nilai",title="Outflow Jakarta K100000")+
geom_vline(xintercept = seq(from=2000, to=2019, by=1),color="grey")+
scale_x_continuous(breaks = seq(2000, 2020, 0.33))
as.xts(flow_data_xts) %>% autoplot() + labs(x="Tahun",y="Nilai",title="Outflow Jakarta K100000")+
geom_vline(xintercept = seq(from=2000, to=2019, by=1),color="grey")+
scale_x_continuous(breaks = seq(2000, 2020, 1))
as.xts(flow_data_xts[1:12])
flow_data_xts[1:12]
as.xts(flow_data_xts[1:12])
as.xts(flow_data_xts)['2000/2001']
as.xts(flow_data_xts)['2000']
as.xts(flow_data_xts)['2000'] %>% autoplot() + labs(x="Tahun",y="Nilai",title="Outflow Jakarta K100000")+
geom_vline(xintercept = seq(from=2000, to=2019, by=1),color="grey")+
scale_x_continuous(breaks = seq(2000, 2020, 1))
as.xts(flow_data_xts)['2000'] %>% autoplot() + labs(x="Tahun",y="Nilai",title="Outflow Jakarta K100000")+
geom_vline(xintercept = seq(from=1, to=12, by=1),color="grey")
as.xts(flow_data_xts)['2000'] %>% autoplot() + labs(x="Tahun",y="Nilai",title="Outflow Jakarta K100000")+
geom_vline(xintercept = seq(from=2000, to=2001, by=12),color="grey")
as.xts(flow_data_xts)['2000'] %>% autoplot() + labs(x="Tahun",y="Nilai",title="Outflow Jakarta K100000")+
geom_vline(xintercept = seq(from=2000, to=2001, by=12),color="grey")+
scale_x_continuous(breaks = seq(1, 12, 1))
as.xts(flow_data_xts)['2000'] %>% autoplot() + labs(x="Tahun",y="Nilai",title="Outflow Jakarta K100000")+
geom_vline(xintercept = seq(from=1, to=12, by=12),color="grey")
as.xts(flow_data_xts)['2000'] %>% autoplot() + labs(x="Tahun",y="Nilai",title="Outflow Jakarta K100000")+
geom_vline(xintercept = seq(from=1, to=12, by=12),color="grey")+
scale_x_continuous(breaks = seq(1, 12, 1))
as.xts(flow_data_xts)['2000'] %>% autoplot() + labs(x="Tahun",y="Nilai",title="Outflow Jakarta K100000")+
geom_vline(xintercept = seq(from=2000, to=2001, by=1),color="grey")+
scale_x_continuous(breaks = seq(1, 12, 1))
as.xts(flow_data_xts)['2000'] %>% autoplot() + labs(x="Tahun",y="Nilai",title="Outflow Jakarta K100000")+
geom_vline(xintercept = seq(from=2000, to=2001, by=1),color="grey")+
scale_x_continuous(breaks = seq(2000, 2001, 1))
as.xts(flow_data_xts)['2000'] %>% autoplot() + labs(x="Tahun",y="Nilai",title="Outflow Jakarta K100000")+
geom_vline(xintercept = seq(from=2000, to=2001, by=1),color="grey")+
scale_x_continuous(breaks = seq(2000, 2001, by=12))
as.xts(flow_data_xts)['2000'] %>% autoplot() + labs(x="Tahun",y="Nilai",title="Outflow Jakarta K100000")+
geom_vline(xintercept = seq(from=2000, to=2001, by=12),color="grey")+
scale_x_continuous(breaks = seq(2000, 2001, by=12))
as.xts(flow_data_xts)['2000'] %>% autoplot() + labs(x="Tahun",y="Nilai",title="Outflow Jakarta K100000")+
geom_vline(xintercept = seq(from=2000, to=2001, by=1/12),color="grey")+
scale_x_continuous(breaks = seq(2000, 2001, by=12))
as.xts(flow_data_xts)['2000'] %>% autoplot() + labs(x="Tahun",y="Nilai",title="Outflow Jakarta K100000")+
geom_vline(xintercept = seq(from=2000, to=2001, by=1/12),color="grey")+
scale_x_continuous(breaks = seq(2000, 2001, by=1/12))
as.xts(flow_data_xts)['2000'] %>% autoplot() + labs(x="Tahun",y="Nilai",title="Outflow Jakarta K100000")+
geom_vline(xintercept = seq(from=2000, to=2001, by=1/12),color="grey")
as.xts(flow_data_xts)['2000'] %>% autoplot() + labs(x="Tahun",y="Nilai",title="Outflow Jakarta K100000")+
geom_vline(xintercept = seq(from=2000, to=2001, by=1/12),color="grey")
as.xts(flow_data_xts)['2000'] %>% autoplot() + labs(x="Tahun",y="Nilai",title="Outflow Jakarta K100000")+
geom_vline(xintercept = seq(from=2000, to=2000, by=1/12),color="grey")
as.xts(flow_data_xts)['2000'] %>% autoplot() + labs(x="Tahun",y="Nilai",title="Outflow Jakarta K100000")+
geom_vline(xintercept = seq(from=2000, to=2001, by=1/12),color="grey")
as.xts(flow_data_xts)['2001'] %>% autoplot() + labs(x="Tahun",y="Nilai",title="Outflow Jakarta K100000")+
geom_vline(xintercept = seq(from=2000, to=2001, by=1/12),color="grey")
as.xts(flow_data_xts)['2001'] %>% autoplot() + labs(x="Tahun",y="Nilai",title="Outflow Jakarta K100000")+
geom_vline(xintercept = seq(from=2001, by=1/12),color="grey")
as.xts(flow_data_xts)['2001'] %>% autoplot() + labs(x="Tahun",y="Nilai",title="Outflow Jakarta K100000")+
geom_vline(xintercept = seq(from=2001, to=2001-(1/12), by=1/12),color="grey")
as.xts(flow_data_xts)['2001'] %>% autoplot() + labs(x="Tahun",y="Nilai",title="Outflow Jakarta K100000")+
geom_vline(xintercept = seq(from=2001, to=(2001-(1/12)), by=1/12),color="grey")
as.xts(flow_data_xts)['2001'] %>% autoplot() + labs(x="Tahun",y="Nilai",title="Outflow Jakarta K100000")+
geom_vline(xintercept = seq(from=2001, to=2001, by=1/12),color="grey")
as.xts(flow_data_xts)['2001'] %>% autoplot() + labs(x="Tahun",y="Nilai",title="Outflow Jakarta K100000")+
geom_vline(xintercept = seq(from=2001, to=2002, by=1/12),color="grey")
as.xts(flow_data_xts)['2002'] %>% autoplot() + labs(x="Tahun",y="Nilai",title="Outflow Jakarta K100000")+
geom_vline(xintercept = seq(from=2002, to=2003, by=1/12),color="grey")
as.xts(flow_data_xts)['2003'] %>% autoplot() + labs(x="Tahun",y="Nilai",title="Outflow Jakarta K100000")+
geom_vline(xintercept = seq(from=2003, to=2004, by=1/12),color="grey")
as.xts(flow_data_xts)['2004'] %>% autoplot() + labs(x="Tahun",y="Nilai",title="Outflow Jakarta K100000")+
geom_vline(xintercept = seq(from=2004, to=2005, by=1/12),color="grey")
as.xts(flow_data_xts)['2010'] %>% autoplot() + labs(x="Tahun",y="Nilai",title="Outflow Jakarta K100000")+
geom_vline(xintercept = seq(from=2010, to=2011, by=1/12),color="grey")
as.xts(flow_data_xts)['2012'] %>% autoplot() + labs(x="Tahun",y="Nilai",title="Outflow Jakarta K100000")+
geom_vline(xintercept = seq(from=2012, to=2013, by=1/12),color="grey")
as.xts(flow_data_xts)['2012'] %>% autoplot() + labs(x="Tahun",y="Nilai",title="Outflow Jakarta K100000")+
geom_vline(xintercept = seq(from=2012, to=2013, by=1/12),color="grey")
library(gsheet)
library(tidyverse)
library(reshape2)
library(zoo)
as.xts(flow_data_xts)['2012'] %>% autoplot() + labs(x="Tahun",y="Nilai",title="Outflow Jakarta K100000")+
geom_vline(xintercept = seq(from=2012, to=2013, by=1/12),color="grey")
library(xts)
as.xts(flow_data_xts)['2012'] %>% autoplot() + labs(x="Tahun",y="Nilai",title="Outflow Jakarta K100000")+
geom_vline(xintercept = seq(from=2012, to=2013, by=1/12),color="grey")
subset %>% describe()
url<-"https://drive.google.com/file/d/1WES1QCc0OHqZt9kiFkwRp2qx2RGxOA97/view?usp=sharing"
Dataset <- gsheet2tbl(url)
#null_loc<-Dataset==""
#Dataset[null_loc]<-NA
Dataset$Kota<-as.factor(Dataset$Kota)
Dataset$Tahun<-as.factor(Dataset$Tahun)
Dataset$Bulan<-as.factor(Dataset$Bulan)
dataset_melt<-melt(Dataset)
dataset_melt %>%
filter(Kota=="Jakarta" && variable=="K100000") %>%
ggplot(aes(x=variable, y=value,fill=variable)) + geom_boxplot() + xlab("Denominasi") + ylab("Outflow") + theme(legend.position = "none") + ggtitle("Distribusi Nilai Outflow tiap Denominasi Mata Uang \ndi Kota Jakarta")
subset<-dataset_melt %>%
filter(Kota=="Jakarta") %>%
filter(variable=="K100000") %>% na.omit()
row.names(subset) <- NULL
subset$Tahun<-as.numeric(subset$Tahun)
subset$Bulan<-as.numeric(subset$Bulan)
subset %>% describe()
library(xts)
library(forecast)
library(nnfor)
library(TSrepr)
library(TSstudio)
library(tidyverse)
library(SmartEDA)
library(dlookr)
library(tseries)
library(urca)
library(RSNNS)
set.seed(72)
subset %>% describe()
3.83e12
3.83
3.83*e12
3.83e12
format(3.83e12,scientific = FALSE)
format(4.29e12,scientific = FALSE)
ggg<-subset %>% describe()
View(ggg)
2710495e6
as.Date("2017-06") - 0:364
source("all_function.R")
init_run()
set.seed(72)
library(gsheet)
library(tidyverse)
library(reshape2)
library(zoo)
url<-"https://drive.google.com/file/d/1WES1QCc0OHqZt9kiFkwRp2qx2RGxOA97/view?usp=sharing"
Dataset <- gsheet2tbl(url)
#null_loc<-Dataset==""
#Dataset[null_loc]<-NA
Dataset$Kota<-as.factor(Dataset$Kota)
Dataset$Tahun<-as.factor(Dataset$Tahun)
Dataset$Bulan<-as.factor(Dataset$Bulan)
dataset_melt<-melt(Dataset)
dataset_melt %>%
filter(Kota=="Jakarta" && variable=="K100000") %>%
ggplot(aes(x=variable, y=value,fill=variable)) + geom_boxplot() + xlab("Denominasi") + ylab("Outflow") + theme(legend.position = "none") + ggtitle("Distribusi Nilai Outflow tiap Denominasi Mata Uang \ndi Kota Jakarta")
subset<-dataset_melt %>%
filter(Kota=="Jakarta") %>%
filter(variable=="K100000") %>% na.omit()
row.names(subset) <- NULL
subset$Tahun<-as.numeric(subset$Tahun)
subset$Bulan<-as.numeric(subset$Bulan)
ggg<-subset %>% describe()
subset %>% describe()
flow_data_xts <- ts(flow_data[,3],start=c(flow_data[1,1], flow_data[1,2]), end=c(2019, 6),
frequency=12)
adf.test(flow_data_xts[,1])
adf.test(flow_data_xts)
ndiffs(flow_data_xts)
source("all_function.R")
init_run()
set.seed(72)
if(!exists("compile")){
compile <- data.frame(Model=character(),
InOutSample=character(),
Location=character(),
Denomination=character(),
fh=numeric(),
MAPE=numeric())
}
for(location in c("Jakarta"))
{
for(denomination in c("K100000"))
{
flow_data<-read_data(location,denomination)
flow_data_xts <- ts(flow_data[,3:4],
start=c(flow_data[1,1], flow_data[1,2]), end=c(2019, 6),
frequency=12)
train_test_data<-split_data(flow_data_xts,20)
arima.model<-auto.arima(train_test_data$train[,1],xreg =train_test_data$train[,2])
#arima.model2<-auto.arima(train_test_data$train,lambda = "auto",xreg =EIDULFITR)
mlp.model<-mlp(train_test_data$train[,1],hd=c(9),reps=1,
xreg =as.data.frame(flow_data_xts[,2]),lags = 1:60,
xreg.lags=list(0),xreg.keep=list(TRUE))
result<-ts.intersect(train_test_data$train,mlp.model$fitted,arima.model$fitted)
colnames(result)<-c("train_data","external_regressors","mlp_fitted","arima_fitted")
print(paste0("in-sample MAPE : ",mape(result[,1],0.5*result[,3]+0.5*result[,4])))
compile<-rbind(compile,data.frame(Model="ARIMAX-MLPX_Parallel",
InOutSample="In Sample",
Location=location,
Denomination=denomination,
fh=0,
MAPE=mape(result[,1],0.5*result[,3]+0.5*result[,4])))
for (fh in 1:24)
{
frc.arima<-forecast(arima.model,h=fh,
xreg = train_test_data$test[,2][1:fh])
frc.mlp<-forecast(mlp.model,h=fh,
xreg = as.data.frame(flow_data_xts[,2]))
result.pred<-ts.union(train_test_data$test[1:fh],
frc.arima$mean,frc.mlp$mean)
colnames(result.pred)<-c("test_data","arima_pred","mlp_pred")
print(paste0("Out-sample error : ",location," ",denomination," ",fh," ",
mape(result.pred[,1],0.5*result.pred[,2]+0.5*result.pred[,3])))
compile<-rbind(compile,data.frame(Model="ARIMAX-MLPX_Parallel",
InOutSample="Out Sample",
Location=location,
Denomination=denomination,
fh=fh,
MAPE=mape(result.pred[,1],0.5*result.pred[,2]+0.5*result.pred[,3])))
}
}
}
arima.model
arima.model<-auto.arima(train_test_data$train[,1],xreg =train_test_data$train[,2],seasonal = FALSE)
arima.model
subset<-dataset_melt %>%
filter(Kota=="Jakarta") %>%
filter(variable=="K100000") %>% na.omit()
library(gsheet)
library(tidyverse)
library(reshape2)
library(zoo)
url<-"https://drive.google.com/file/d/1WES1QCc0OHqZt9kiFkwRp2qx2RGxOA97/view?usp=sharing"
Dataset <- gsheet2tbl(url)
#null_loc<-Dataset==""
#Dataset[null_loc]<-NA
Dataset$Kota<-as.factor(Dataset$Kota)
Dataset$Tahun<-as.factor(Dataset$Tahun)
Dataset$Bulan<-as.factor(Dataset$Bulan)
dataset_melt<-melt(Dataset)
dataset_melt %>%
filter(Kota=="Jakarta" && variable=="K100000") %>%
ggplot(aes(x=variable, y=value,fill=variable)) + geom_boxplot() + xlab("Denominasi") + ylab("Outflow") + theme(legend.position = "none") + ggtitle("Distribusi Nilai Outflow tiap Denominasi Mata Uang \ndi Kota Jakarta")
subset<-dataset_melt %>%
filter(Kota=="Jakarta") %>%
filter(variable=="K100000") %>% na.omit()
row.names(subset) <- NULL
subset$Tahun<-as.numeric(subset$Tahun)
subset$Bulan<-as.numeric(subset$Bulan)
subset %>% describe()
View(subset %>% describe())
adf.test(flow_data_xts)
adf.test(flow_data_xts[,1])
source("all_function.R")
init_run()
set.seed(72)
if(!exists("compile")){
compile <- data.frame(Model=character(),
InOutSample=character(),
Location=character(),
Denomination=character(),
fh=numeric(),
MAPE=numeric())
}
for(location in c("Jakarta"))
{
for(denomination in c("K100000"))
{
flow_data<-read_data(location,denomination)
flow_data_xts <- ts(flow_data[,3:4],start=c(flow_data[1,1], flow_data[1,2]), end=c(2019, 6),
frequency=12)
train_test_data<-split_data(flow_data_xts,20)
arima.model<-auto.arima(train_test_data$train[,1],xreg =train_test_data$train[,2] )
arima.model2<-auto.arima(train_test_data$train[,1],xreg =train_test_data$train[,2],
lambda = "auto")
result<-ts.intersect(train_test_data$train,arima.model$fitted)
colnames(result)<-c("train_data","external_regressors","arima_fitted")
print(paste0("in-sample MAPE : ",location," ",denomination," ",
mape(result[,1],result[,3])))
compile<-rbind(compile,data.frame(Model="ARIMAX",
InOutSample="In Sample",
Location=location,
Denomination=denomination,
fh=0,
MAPE=mape(result[,1],result[,3])))
for (fh in 1:24) {
frc.arima<-forecast(arima.model,h=fh,xreg = train_test_data$test[,2][1:fh])
result.pred<-ts.intersect(train_test_data$test[1:fh],frc.arima$mean)
colnames(result.pred)<-c("test_data","arima_fitted")
print(paste0("out-sample MAPE : ",location," ",denomination," ",fh," ",
mape(result.pred[,1],result.pred[,2])))
compile<-rbind(compile,data.frame(Model="ARIMAX",
InOutSample="Out Sample",
Location=location,
Denomination=denomination,
fh=fh,
MAPE=mape(result.pred[,1],result.pred[,2])))
}
}
}
arima.model
